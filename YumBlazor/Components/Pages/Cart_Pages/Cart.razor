@page "/cart"
@using System.Globalization
@inject ICartRepository _cartRepository
@inject IProductRepository _productRepository
@inject AuthenticationStateProvider _authenticationStateProvider

<div class="row w-100">
	<div class="col-lg-6 col-12">
		<div class="container p-4 m-2">
			<h4 class="text-center text-success display-6">
				Cart Summary
			</h4>


			<div class="d-flex p-2 m-2">
				<div class="card flex-row w-100">
					<img class="card-img-left" style="width: 120px;">
					<div class="card-body">
						@foreach (var cart in Carts)
							{
						<div class="d-flex justify-content-between align-items-center">
							
							
							<br/>
							
								<h4 class="">
									@cart.Product.Name
								</h4>
								<h4 class="">
									@cart.Product.Price.ToString("C", CultureInfo.GetCultureInfo("en-us"))
								</h4>
								<p>product</p>
		
						</div>
						<div class="flex-fill">
							<h4 class="text-danger">
									@((cart.Count * cart.Product.Price).ToString("C", CultureInfo.GetCultureInfo("en-us")))
							</h4>
						</div>
						
						<div class="d-flex justify-content-between align-items-center">
							<div class="d-flex justify-content-between g-0">
								<span>
									<i class="bi bi-dash-circle-fill btn text-secondary"></i>
								</span>
								<span class="ml-1 me-1">
									<b class="lead">--@cart.Count--</b>
								</span>
								<span>
									<i class="bi bi-plus-circle-fill btn text-secondary"></i>
								</span>
							</div>
							<button class="btn btn-danger">Remove</button>
						</div>
						}
					</div>
				</div>
			</div>

		</div>
	</div>
	<div class="col-lg-6 col-12 p-4">
		<div class="card">
			<div class="card-header text-success text-center display-6">
				Pickup Details
			</div>
			<div class="card-body">
				<form>
					<div class="form-group">
						<label>Name</label>
						<input type="text" class="form-control" />
					</div>
					<div class="form-group">
						<label>Email</label>
						<input type="text" class="form-control" />
					</div>
					<div class="form-group">
						<label>Phone</label>
						<input type="text" class="form-control" />
					</div>

				</form>
				<div class="card mt-4 bg-light">
					<div class="card-body">
						<h4>
							Grand Total: --$$--
						</h4>
						<h4>
							No. of Items: --COUNT--
						</h4>
					</div>

				</div>
			</div>

			<button class="btn btn-success m-4">
				Looks Good? Place Order!
			</button>
		</div>
	</div>
</div>


@code {
	private IEnumerable<YumBlazor.Data.Cart> Carts = new List<YumBlazor.Data.Cart>();
	private bool IsProcessing { get; set; } = true;

	protected async override Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await LoadCart();
			IsProcessing = false;
			StateHasChanged();
		}
	}



	private async Task LoadCart()
	{
		var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;
		var autenticated = user.Identity is not null && user.Identity.IsAuthenticated;
		string userId = user.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;

		Carts = await _cartRepository.GetAllAsync(userId);
	}

}
